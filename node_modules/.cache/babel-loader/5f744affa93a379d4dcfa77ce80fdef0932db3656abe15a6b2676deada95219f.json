{"ast":null,"code":"var _jsxFileName = \"C:\\\\Meghal\\\\Programming Journal\\\\Snake Game\\\\snake-game\\\\src\\\\components\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./game.css\"; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([[10, 10], [10, 9], [10, 8]]);\n  const [food, setFood] = useState([15, 15]);\n  const [direction, setDirection] = useState(\"RIGHT\");\n  const [gameOver, setGameOver] = useState(false);\n  const moveSnake = () => {\n    const newSnake = [...snake];\n    const head = [...newSnake[newSnake.length - 1]];\n    switch (direction) {\n      case \"UP\":\n        head[1] -= 1;\n        break;\n      case \"DOWN\":\n        head[1] += 1;\n        break;\n      case \"LEFT\":\n        head[0] -= 1;\n        break;\n      case \"RIGHT\":\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n    newSnake.push(head);\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setFood([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\n    } else {\n      newSnake.shift();\n    }\n    if (head[0] < 0 || head[1] < 0 || head[0] >= 20 || head[1] >= 20 || newSnake.slice(0, -1).some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n    } else {\n      setSnake(newSnake);\n    }\n  };\n  const Restart = () => {\n    setSnake([[10, 10]]);\n    setFood([15, 15]);\n    setDirection(\"RIGHT\");\n    setGameOver(false);\n  };\n  const changeDirection = e => {\n    switch (e.key) {\n      case \"ArrowUp\":\n        if (direction !== \"DOWN\") setDirection(\"UP\");\n        break;\n      case \"ArrowDown\":\n        if (direction !== \"UP\") setDirection(\"DOWN\");\n        break;\n      case \"ArrowLeft\":\n        if (direction !== \"RIGHT\") setDirection(\"LEFT\");\n        break;\n      case \"ArrowRight\":\n        if (direction !== \"LEFT\") setDirection(\"RIGHT\");\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", changeDirection);\n    return () => document.removeEventListener(\"keydown\", changeDirection);\n  }, [direction]);\n  useEffect(() => {\n    if (!gameOver) {\n      const interval = setInterval(moveSnake, 200);\n      return () => clearInterval(interval);\n    }\n  }, [snake, direction, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-area\",\n    children: gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Restart(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake\",\n        children: snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"snake-segment\",\n          style: {\n            left: `${segment[0] * 20}px`,\n            top: `${segment[1] * 20}px`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food\",\n        style: {\n          left: `${food[0] * 20}px`,\n          top: `${food[1] * 20}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"iIZmiJaHKxKH5vFPLJIUhTm/dq8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","moveSnake","newSnake","head","length","push","Math","floor","random","shift","slice","some","segment","Restart","changeDirection","e","key","document","addEventListener","removeEventListener","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","style","left","top","_c","$RefreshReg$"],"sources":["C:/Meghal/Programming Journal/Snake Game/snake-game/src/components/game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./game.css\"; // Assuming you have a CSS file for styling\r\n\r\nconst Game = () => {\r\n    const [snake, setSnake] = useState([[10, 10], [10, 9], [10, 8]]);\r\n    const [food, setFood] = useState([15, 15]);\r\n    const [direction, setDirection] = useState(\"RIGHT\");\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const moveSnake = () => {\r\n        const newSnake = [...snake];\r\n        const head = [...newSnake[newSnake.length - 1]];\r\n\r\n        switch (direction) {\r\n            case \"UP\":\r\n                head[1] -= 1;\r\n                break;\r\n            case \"DOWN\":\r\n                head[1] += 1;\r\n                break;\r\n            case \"LEFT\":\r\n                head[0] -= 1;\r\n                break;\r\n            case \"RIGHT\":\r\n                head[0] += 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        newSnake.push(head);\r\n        if (head[0] === food[0] && head[1] === food[1]) {\r\n            setFood([Math.floor(Math.random() * 20), Math.floor(Math.random() * 20)]);\r\n        } else {\r\n            newSnake.shift();\r\n        }\r\n\r\n        if (\r\n            head[0] < 0 ||\r\n            head[1] < 0 ||\r\n            head[0] >= 20 ||\r\n            head[1] >= 20 ||\r\n            newSnake.slice(0, -1).some(segment => segment[0] === head[0] && segment[1] === head[1])\r\n        ) {\r\n            setGameOver(true);\r\n        } else {\r\n            setSnake(newSnake);\r\n        }\r\n    };\r\n\r\n    const Restart = () => {\r\n        setSnake([[10, 10]]);\r\n        setFood([15, 15]);\r\n        setDirection(\"RIGHT\");\r\n        setGameOver(false);\r\n    };\r\n\r\n    const changeDirection = (e) => {\r\n        switch (e.key) {\r\n            case \"ArrowUp\":\r\n                if (direction !== \"DOWN\") setDirection(\"UP\");\r\n                break;\r\n            case \"ArrowDown\":\r\n                if (direction !== \"UP\") setDirection(\"DOWN\");\r\n                break;\r\n            case \"ArrowLeft\":\r\n                if (direction !== \"RIGHT\") setDirection(\"LEFT\");\r\n                break;\r\n            case \"ArrowRight\":\r\n                if (direction !== \"LEFT\") setDirection(\"RIGHT\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", changeDirection);\r\n        return () => document.removeEventListener(\"keydown\", changeDirection);\r\n    }, [direction]);\r\n\r\n    useEffect(() => {\r\n        if (!gameOver) {\r\n            const interval = setInterval(moveSnake, 200);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [snake, direction, gameOver]);\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {gameOver ? (\r\n                <>\r\n                    <div className=\"game-over\">Game Over</div>\r\n                    <button onClick={()=>Restart()}>Play Again</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className=\"snake\">\r\n                        {snake.map((segment, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"snake-segment\"\r\n                                style={{\r\n                                    left: `${segment[0] * 20}px`,\r\n                                    top: `${segment[1] * 20}px`,\r\n                                }}\r\n                            ></div>\r\n                        ))}\r\n                    </div>\r\n                    <div\r\n                        className=\"food\"\r\n                        style={{\r\n                            left: `${food[0] * 20}px`,\r\n                            top: `${food[1] * 20}px`,\r\n                        }}\r\n                    ></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}